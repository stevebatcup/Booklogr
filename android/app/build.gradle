def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '4'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0.6'
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
    compileSdkVersion 28

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    lintOptions {
        disable 'InvalidPackage'
    }

    defaultConfig {
        applicationId "co.svbatcup.booklogr"
        minSdkVersion 16
        targetSdkVersion 29
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        multiDexEnabled true
    }

    signingConfigs {
       debug {
           keyAlias keystoreProperties['keyAliasDebug']
           keyPassword keystoreProperties['keyPasswordDebug']
           storeFile keystoreProperties['storeFileDebug'] ? file(keystoreProperties['storeFileDebug']) : null
           storePassword keystoreProperties['storePasswordDebug']
       }
       release {
           keyAlias keystoreProperties['keyAliasRelease']
           keyPassword keystoreProperties['keyPasswordRelease']
           storeFile keystoreProperties['storeFileRelease'] ? file(keystoreProperties['storeFileRelease']) : null
           storePassword keystoreProperties['storePasswordRelease']
       }
    }

    buildTypes {
        debug {
           signingConfig signingConfigs.debug
        }
        release {
           signingConfig signingConfigs.release
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'com.google.firebase:firebase-analytics:17.2.2'
    implementation 'com.android.support:multidex:1.0.3'
}

apply plugin: 'io.fabric'
apply plugin: 'com.google.gms.google-services'
